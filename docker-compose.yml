version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: fixi-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-fixi_db}
      POSTGRES_USER: ${DB_USER:-fixi_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password123}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - fixi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-fixi_user} -d ${DB_NAME:-fixi_db}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MongoDB for Chat and Reviews
  mongodb:
    image: mongo:7
    container_name: fixi-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-fixi_chat}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - fixi-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ismaster')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: fixi-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fixi-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fixi-backend
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-fixi_db}
      DB_USER: ${DB_USER:-fixi_user}
      DB_PASSWORD: ${DB_PASSWORD:-password123}
      MONGODB_URI: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DB_NAME:-fixi_chat}?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis123}
      JWT_SECRET: ${JWT_SECRET:-supersecretjwtkey}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-supersecretrefreshkey}
      FRONTEND_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fixi-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run start:dev

  # Frontend Web
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fixi-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_WS_URL: ws://localhost:3000
      CHOKIDAR_USEPOLLING: true
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - fixi-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  fixi-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16